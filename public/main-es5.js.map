{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/add-item/add-item.component.ts","webpack:///src/app/component/add-item/add-item.component.html","webpack:///src/app/component/cart/cart.component.ts","webpack:///src/app/component/cart/cart.component.html","webpack:///src/app/component/display-items/display-items.component.ts","webpack:///src/app/component/display-items/display-items.component.html","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/login/login.component.ts","webpack:///src/app/component/login/login.component.html","webpack:///src/app/component/top-bar/top-bar.component.ts","webpack:///src/app/component/top-bar/top-bar.component.html","webpack:///src/app/service/cart.service.ts","webpack:///src/app/service/item.service.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","AddItemComponent","storage","firestore","router","event","file","target","files","filename","name","fileExt","split","pop","filePath","Math","random","toString","substring","task","upload","image","uploadPercent","percentageChanges","createId","collection","doc","set","item","price","error","console","log","navigate","uploadFile","uploadItem","CartComponent","cartService","cartItems","total","getCartItems","getTotalPrice","count","getNoItems","removeFromCart","DisplayItemsComponent","itemService","cart_items","getFoodItems","getItems","subscribe","food_items","addToCart","img","ref","getDownloadURL","HomeComponent","LoginComponent","formBuilder","auth","loginDetails","group","username","required","password","details","signInWithEmailAndPassword","value","loginError","login","TopBarComponent","CartService","cart","push","round","splice","indexOf","length","providedIn","ItemService","valueChanges","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartComponent } from './component/cart/cart.component';\nimport { DisplayItemsComponent } from './component/display-items/display-items.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { AddItemComponent } from './component/add-item/add-item.component';\n\n\nconst routes: Routes = [\n  {path: '', component: DisplayItemsComponent},\n  {path: 'shop', component: DisplayItemsComponent},\n  {path: 'cart', component: CartComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'home', component: HomeComponent,\n    children: [\n      {path: 'add-item', component: AddItemComponent}\n    ]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'shopping-application';\n}\n","<app-top-bar></app-top-bar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment.prod';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { DisplayItemsComponent } from './component/display-items/display-items.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { TopBarComponent } from './component/top-bar/top-bar.component';\nimport { CartComponent } from './component/cart/cart.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { AddItemComponent } from './component/add-item/add-item.component';\n\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DisplayItemsComponent,\n    TopBarComponent,\n    CartComponent,\n    LoginComponent,\n    HomeComponent,\n    AddItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    AngularFireAuthModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatBadgeModule,\n    MatGridListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDividerModule,\n    MatListModule,\n    NgxMatFileInputModule,\n    MatProgressBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent implements OnInit {\n\n  item;\n  price;\n  image;\n  uploadPercent: Observable<number>;\n\n  constructor(\n    private storage: AngularFireStorage,\n    private firestore: AngularFirestore,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  uploadFile(event) {\n    const file = event.target.files[0];\n    const filename = file.name;\n    const fileExt = filename.split('.').pop();\n    const filePath = Math.random().toString(36).substring(2) + '.' + fileExt;\n    const task = this.storage.upload(`images/${filePath}`, file);\n\n    this.image = filePath;\n    this.uploadPercent = task.percentageChanges();\n  }\n\n  uploadItem() {\n    const id = this.firestore.createId();\n\n    this.firestore.collection(\"items\").doc(id).set({\n      name: this.item,\n      price: this.price,\n      image: this.image\n    }).catch(error => {\n      console.log(\"not added error ->\" + error);\n    }).then(() => {\n      console.log(\"added\");\n      this.router.navigate([\"/home\"]);\n    })\n\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n    </mat-card-header>\n    <mat-card-content>\n        <mat-card-title style=\"text-align: center;\">\n            New Item\n        </mat-card-title>\n        \n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Item</mat-label>\n            <input matInput placeholder=\"Ex. Pizza\" type=\"text\" [(ngModel)]=\"item\" required>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Price</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"price\" min=\"1.00\" required>\n        </mat-form-field>\n\n        <div class=\"button-wrap\">\n            <label class =\"new-button\" for=\"upload-image\"> Choose Image</label>\n            <input id=\"upload-image\" type=\"file\" (change)=\"uploadFile($event)\" \n                accept=\"image/*\" required>\n        </div>\n        \n        <div class=\"spacer\"> \n            <mat-progress-bar mode=\"determinate\" value=\"{{uploadPercent | async}}\"></mat-progress-bar>\n        </div>\n            \n        <button mat-raised-button color=\"primary\" class=\"btn\"\n                (click)=\"uploadItem()\">\n            Upload Item\n        </button>\n            \n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Item } from '../../../modal/item';\nimport { CartService } from '../../service/cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n  cartItems: Item[] = [];\n  total = 0.0;\n  count;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.cartItems = this.cartService.getCartItems();\n    this.total = this.cartService.getTotalPrice();\n    this.count = this.cartService.getNoItems();\n  }\n\n  remove(item) {\n    this.cartService.removeFromCart(item);\n    this.total = this.cartService.getTotalPrice();\n    this.count = this.cartService.getNoItems();\n  }\n}\n","<mat-card class=\"section\">\n    <h2 class=\"heading\">\n        Items In Cart\n        <mat-icon matBadge=\"{{count}}\">shopping_cart</mat-icon>\n    </h2>\n    <mat-divider></mat-divider>\n    <div *ngIf=\"cartItems.length; else noItems\" class=\"card\">\n        <div *ngFor=\"let item of cartItems\" class=\"items\"> \n            <div class=\"item-img\">\n                <img class=\"cart-img\" mat-card-img src=\"./../../../assets/images/{{item.image}}\" \n                    alt=\"a picture of {{item.name}}\">\n            </div>\n            <div class=\"item-desc\">\n                {{item.name + ' - R' + item.price}}\n            </div>\n            <div class=\"item-controls\">\n                <button mat-raised-button color=\"primary\" (click)=\"remove(item)\">\n                    remove\n                    <mat-icon>remove_shopping_cart</mat-icon>\n                </button>\n            </div>\n        </div>\n        <p>\n            <strong class=\"label\">Total: R {{total}}</strong>\n        </p>\n    </div>\n\n    <ng-template #noItems>\n        <div class=\"card\">\n            Empty Cart\n        </div>\n    </ng-template>\n\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Item } from '../../../modal/item';\nimport { ItemService } from '../../service/item.service';\nimport { CartService } from '../../service/cart.service';\nimport { AngularFireStorage } from '@angular/fire/storage';\n\n@Component({\n  selector: 'app-display-items',\n  templateUrl: './display-items.component.html',\n  styleUrls: ['./display-items.component.scss']\n})\nexport class DisplayItemsComponent implements OnInit {\n\n  food_items: Item[];\n  cart_items: Item[] = [];\n  count;\n  constructor(\n    private itemService: ItemService,\n    private cartService: CartService,\n    private storage: AngularFireStorage\n  ) { }\n\n  ngOnInit(): void {\n    this.getFoodItems();\n    this.count = this.cartService.getNoItems();\n  }\n\n  getFoodItems() {\n    this.itemService.getItems().subscribe(item => this.food_items = item);\n  }\n\n  addToCart(item: Item) {\n    this.cartService.addToCart(item);\n    this.count = this.cartService.getNoItems();\n  }\n\n  getImage(img) {\n    // images/yq7dudgvxl.png\n    return this.storage.ref(`/images/${img}`).getDownloadURL();\n  }\n\n\n}\n","<mat-card class=\"section\">\n    <h2 class=\"heading\">\n        Items\n        <mat-icon matBadge=\"{{count}}\">shopping_cart</mat-icon>\n    </h2>\n    <mat-divider></mat-divider>\n    <div class=\"box\">\n        <div class=\"item\" *ngFor=\"let item of food_items\">\n            <mat-card class=\"item-card\">\n                <!--<img mat-card-img src=\"./../../../assets/images/{{item.image}}\" -->\n                <img mat-card-img [src]=\"getImage(item.image)\"\n                    alt=\"a picture of {{item.name}}\">\n                <mat-card-content>\n                    <strong>{{item.name}}</strong>\n                    <p>R {{item.price}}</p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-raised-button color=\"primary\" (click)=\"addToCart(item)\">\n                        Add To Cart\n                        <mat-icon>add_shopping_cart</mat-icon>\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>      \n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 style=\"text-align: center;margin-top:50px;\">\n    <button routerLink=\"./add-item\" mat-raised-button color=\"primary\">\n        Add Item\n    </button>\n</h1>\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginDetails: FormGroup;\n  loginError;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: AngularFireAuth\n    ) { }\n\n  ngOnInit(): void {\n    this.loginDetails = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  login(details) {\n\n    this.auth.signInWithEmailAndPassword(details.value.username, details.value.password).then(() => {\n      this.router.navigate(['/home']);\n    }).catch(error => {\n      this.loginError = \"Invalid Login Details\";\n    });\n\n    /*\n    if(details.value.username === 'user' && details.value.password === 'user') {\n        this.router.navigate(['/home']);\n    } else {\n        this.loginError = \"Invalid Login Details\";\n\n    }\n    */\n  }\n  \n\n}\n","<!--<form [formGroup]=\"loginDetails\" (ngSubmit)=\"login(loginDetails)\">\n    <label>{{loginError}}</label>\n    <label>\n        Username:\n        <input type=\"text\" formControlName=\"username\" placeholder=\"Enter Username\">\n    </label>\n\n    <label>\n        <input type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\">\n    </label>\n\n    <button type=\"submit\" [disabled]=\"loginDetails.invalid\">Login</button>\n\n</form>-->\n\n<mat-card class=\"example-card\">\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <p class=\"error\">\n            {{loginError}}\n        </p>\n        <form [formGroup]=\"loginDetails\" (ngSubmit)=\"login(loginDetails)\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"email\" formControlName=\"username\"\n                    placeholder=\"Enter email\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\"\n                    placeholder=\"Enter Password\" required>\n            </mat-form-field><br>\n            \n            <button mat-raised-button color=\"primary\" class=\"btn\"\n                [disabled]=\"loginDetails.invalid\">\n                Login\n            </button>\n            \n        </form>\n    </mat-card-content>\n\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/service/cart.service';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor(public cartService: CartService) { }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>Shopping Application</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-button routerLink=\"/shop\">\n        shop\n    </button>\n    <button mat-button routerLink=\"/home\">\n        home\n    </button>\n    <button mat-button routerLink=\"/cart\">\n        <mat-icon matBadge=\"{{cartService.getNoItems()}}\">shopping_cart</mat-icon>\n    </button>\n    <!-- \n        TEMPLATE \n    -->\n    <button mat-button routerLink=\"/login\">\n        Login\n    </button>\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  cart = [];\n  total = 0;\n\n  constructor() { }\n\n  addToCart(item) {\n    this.cart.push(item);\n    this.total += Math.round(item.price);\n  }\n\n  removeFromCart(item) {\n    this.cart.splice(this.cart.indexOf(item),1);\n    this.total -= Math.round(item.price);\n  }\n\n  getCartItems() {\n    return this.cart;\n  }\n\n  getNoItems() {\n    return this.cart.length;\n  }\n\n  getTotalPrice() {\n    return this.total;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Item } from '../../modal/item';\nimport { Items } from '../../mocks/test.mock';\n\nimport { Observable, of } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  constructor(private firestore: AngularFirestore) { }\n\n  getItems() {\n    //return of (Items);\n    return this.firestore.collection<Item>('items').valueChanges();\n  }\n}\n","export const environment = {\n  production: true, \n  firebaseConfig: {\n    apiKey: \"AIzaSyD-dQzKRS4VAkQ8ER0n2li1udXprXlX6sQ\",\n    authDomain: \"shopping-application-f2282.firebaseapp.com\",\n    databaseURL: \"https://shopping-application-f2282.firebaseio.com\",\n    projectId: \"shopping-application-f2282\",\n    storageBucket: \"shopping-application-f2282.appspot.com\",\n    messagingSenderId: \"807261511271\",\n    appId: \"1:807261511271:web:e270faedceed444e72bec2\"\n  }\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}